{"version":3,"sources":["getWeb3.js","routes/Campaigns.jsx","util/Date.jsx","components/CampaignList.jsx","components/Campaign.jsx","App.js","serviceWorker.js","index.js","components/CreateCampaign.jsx"],"names":["getWeb3","Promise","resolve","reject","a","window","celo","enable","web3","Web3","console","error","alert","Campaigns","campaignList","createCampaign","Fragment","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","CampaignList","props","bookmarked","contract","flag","useState","campaignCards","setCampaignCards","show","setShow","dataLoaded","setDataLoaded","useEffect","campaigns","_campaigns","methods","getBookmarkedCampaignIDs","call","forEach","id","_campaign","getCampaign","c","index","owner","name","image","description","goal","BigNumber","closedDate","closedDateStr","closed","goalReached","donationWithdrawn","push","getCampaignsLength","log","i","all","map","campaign","Col","Card","className","Img","variant","src","Body","Title","Subtitle","Text","to","fetchCampaigns","Modal","onHide","Header","closeButton","Footer","Container","Row","xs","md","lg","Campaign","useParams","account","cUSDContract","setCampaign","campaignDonation","setCampaignDonation","donationAmount","setDonationAmount","donateDisabled","setDonateDisabled","closeDisabled","setCloseDisabled","withdrawDisabled","setWithdrawDisabled","setFlag","dataFlag","setDataFlag","fetchCampaign","_campaignDonation","getCampaignDonation","fetchCampaignDonation","handleClose","closeCampaign","send","from","handleSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","donation","utils","toWei","toString","approve","process","makeDonation","handleWithdraw","withdrawDonation","fluid","sm","alt","style","fontWeight","whiteSpace","Form","onSubmit","Label","Control","type","min","value","onChange","parseInt","target","Button","disabled","Spinner","as","animation","size","role","aria-hidden","onClick","App","state","accounts","kit","updateFlag","setState","login","newKitFromWeb3","eth","getAccounts","defaultAccount","connection","instance","Contract","DonationCampaigns","ERC20","logout","isConnected","stop","this","allCampaigns","CreateCampaign","Nav","Item","Link","path","element","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","auth","Buffer","projectId","ipfs","ipfsHttpClient","host","port","protocol","headers","authorization","validated","setValidated","btnDisabled","setBtnDisabled","nameRef","useRef","descRef","goalRef","closeDateRef","fileRef","add","current","files","added","goalWei","Math","floor","getTime","result","noValidate","Group","controlId","placeholder","required","ref","Feedback","rows","step","toISOString","split","accept"],"mappings":"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","file":"static/js/main.10b2230e.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () => \n  new Promise(async (resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    //window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.celo) {\n        try {\n          await window.celo.enable();\n          const web3 = new Web3(window.celo);\n          resolve(web3);\n        } catch (error) {\n          console.error(\"Fail to inject web3 from wallet extension\")\n        }\n      }\n      else {\n        alert(\"Celo Extension Wallet is not found, you need to install it to use this DApp..\")\n      }\n    //});\n  });\nexport default getWeb3;","import React from 'react';\n\nexport default function Campaigns({ campaignList, createCampaign }) {\n \n  return (\n    <React.Fragment>\n        { campaignList }\n        { createCampaign }\n    </React.Fragment>\n  );\n}","export function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n\n    return [year, month, day].join('-');\n}","import React, { useState, useEffect } from 'react';\nimport BigNumber from \"bignumber.js\";\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Modal from 'react-bootstrap/Modal';\nimport { Link } from 'react-router-dom';\nimport { formatDate } from '../util/Date';\n\nexport default function CampaignList(props) {\n    const { bookmarked, contract, flag } = props;\n    const [campaignCards, setCampaignCards] = useState([]);\n    const [show, setShow] = useState(false);\n    const [dataLoaded, setDataLoaded] = useState(false);\n    useEffect(() => {\n        let campaigns = [];\n        const _campaigns = [];\n        async function fetchCampaigns() {\n             if (bookmarked === \"true\") {\n                const ids = await contract.methods.getBookmarkedCampaignIDs().call();\n                ids.forEach((id) => {\n                    let _campaign = new Promise(async (resolve, reject) => {\n                      let c = await contract.methods.getCampaign(id).call()\n                      resolve({\n                        index: c[1],\n                        owner: c[0],\n                        name: c[2],\n                        image: `https://gungz.infura-ipfs.io/ipfs/${c[3]}`,\n                        description: c[4],\n                        goal: new BigNumber(c[5]),\n                        closedDate: new Date(c[6] * 1000),\n                        closedDateStr: formatDate(new Date(c[6] * 1000)),\n                        closed: c[7],\n                        goalReached: c[8],\n                        donationWithdrawn: c[9]\n                      })\n                    });\n                    _campaigns.push(_campaign);\n                });\n            } else {\n                const length = await contract.methods.getCampaignsLength().call();\n                console.log(length);\n                for (let i = 0; i < length; i++) {\n                    let _campaign = new Promise(async (resolve, reject) => {\n                      let c = await contract.methods.getCampaign(i).call()\n                      resolve({\n                        index: c[1],\n                        owner: c[0],\n                        name: c[2],\n                        image: `https://gungz.infura-ipfs.io/ipfs/${c[3]}`,\n                        description: c[4],\n                        goal: new BigNumber(c[5]),\n                        closedDate: new Date(c[6] * 1000),\n                        closedDateStr: formatDate(new Date(c[6] * 1000)),\n                        closed: c[7],\n                        goalReached: c[8],\n                        donationWithdrawn: c[9]\n                      })\n                    });\n                    _campaigns.push(_campaign);\n              }\n            }\n            if (_campaigns.length > 0) {\n                campaigns = await Promise.all(_campaigns);\n            }\n            setCampaignCards(campaigns.map((campaign) => \n                <Col>\n                  <Card className=\"h-100\">\n                    <Card.Img variant=\"top\" src={campaign.image} />\n                    <Card.Body>\n                      <Card.Title>{campaign.name}</Card.Title>\n                      <Card.Subtitle className=\"mb-2 text-muted\">{\"Closed on \" + campaign.closedDateStr}</Card.Subtitle>\n                      <Card.Text>\n                        {campaign.description}\n                      </Card.Text>\n                      <Link to={\"celo-charity-campaign/campaign/\" + campaign.index}>See Detail</Link>\n                    </Card.Body>\n                  </Card>\n                </Col>\n            ));\n            setDataLoaded(true);\n        }\n        fetchCampaigns();\n    }, [bookmarked, flag])\n    \n    const handleClose = () => {\n      setShow(false);\n    }\n    const handleShow = () => setShow(true);\n    \n    return (\n        <React.Fragment>\n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>Add Campaign</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                 \n              </Modal.Body>\n              <Modal.Footer>\n                \n              </Modal.Footer>\n            </Modal>\n        \n            {campaignCards.length > 0 && \n                <Container>\n                    <Row xs={1} md={2} lg={3} className=\"g-4\">\n                        {campaignCards}\n                    </Row>\n                </Container>\n            }\n            {campaignCards.length === 0 && dataLoaded === true &&\n                <div className=\"alert alert-info\">\n                  {bookmarked === true ? \"No donation campaign has been bookmarked.\" : \"No donation campaign has been created.\" }\n                </div>\n            }\n        </React.Fragment>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Form, Spinner } from 'react-bootstrap';\nimport {\n  useParams\n} from \"react-router-dom\";\nimport { formatDate } from '../util/Date';\nimport BigNumber from \"bignumber.js\";\nimport Web3 from \"web3\";\n\nconst Campaign = (props) => {\n    const { id } = useParams();\n    const { contract, account, cUSDContract } = props;\n    const [campaign, setCampaign] = useState(null);\n    const [campaignDonation, setCampaignDonation] = useState(0);\n    const [donationAmount, setDonationAmount] = useState(0);\n    const [donateDisabled, setDonateDisabled] = useState(false);\n    const [closeDisabled, setCloseDisabled] = useState(false);\n    const [withdrawDisabled, setWithdrawDisabled] = useState(false);\n    const [flag, setFlag] = useState(false);\n    const [dataFlag, setDataFlag] = useState(false);\n    const handleDonationChange = (event) => {\n        const value = parseInt(event.target.value, 10);\n        setDonationAmount(value);\n    };\n    useEffect(() => {\n        //const _camp = null;\n        async function fetchCampaign() {\n            let _campaign = new Promise(async (resolve, reject) => {\n              let c = await contract.methods.getCampaign(id).call();\n              resolve({\n                index: c[1],\n                owner: c[0],\n                name: c[2],\n                image: `https://gungz.infura-ipfs.io/ipfs/${c[3]}`,\n                description: c[4],\n                goal: new BigNumber(c[5]),\n                closedDate: new Date(c[6] * 1000),\n                closedDateStr: formatDate(new Date(c[6] * 1000)),\n                closed: c[7],\n                goalReached: c[8],\n                donationWithdrawn: c[9],\n              })\n            });\n            setCampaign(await _campaign);\n        }\n        fetchCampaign();\n    }, [dataFlag])\n    \n    useEffect(() => {\n        //const _camp = null;\n        async function fetchCampaignDonation() {\n            let _campaignDonation = new Promise(async (resolve, reject) => {\n              let d = await contract.methods.getCampaignDonation(id).call();\n              resolve(d);\n            });\n            setCampaignDonation(await _campaignDonation);\n        }\n        fetchCampaignDonation();\n    }, [flag, dataFlag])\n    \n    const handleClose = async () => {\n        setCloseDisabled(true);\n        const result = await contract.methods.closeCampaign(campaign.index)\n                        .send({ from: account });\n        setCloseDisabled(false);\n        setDataFlag(!dataFlag);\n    }\n    \n    const handleSubmit = async (event) => {\n      const form = event.currentTarget;\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n      } else {\n        event.preventDefault();\n        setDonateDisabled(true);\n        const donation = Web3.utils.toWei(donationAmount.toString(), 'ether');\n        //console.log(donation);\n        const res = await cUSDContract.methods\n            .approve(process.env.REACT_APP_DONATION_CAMPAIGNS_ADDRESS, donation)\n            .send({ from: account });\n        //console.log(res);\n        const result = await contract.methods.makeDonation(campaign.index, donation)\n                        .send({ from: account });\n        //console.log(result);\n        setDonationAmount(0);\n        setDonateDisabled(false);\n        setFlag(!flag);\n      }\n    };\n    \n    const handleWithdraw = async (event) => {\n        setWithdrawDisabled(true);\n        const result = await contract.methods.withdrawDonation(campaign.index)\n                        .send({ from: account });\n        setWithdrawDisabled(false);\n        setDataFlag(!dataFlag);\n    }\n        \n    return (\n        <React.Fragment>\n            {campaign &&\n                <Container className=\"mt-1\" fluid>\n                  <Row>\n                    <Col xs={12} className=\"text-center\">\n                        <h3>{campaign.name}</h3>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col xs={12} sm={4} className=\"text-center\">\n                      <img src={campaign.image} alt=\"Attribute\" className=\"img-fluid rounded mx-auto d-block\" />\n                    </Col>\n                    <Col xs={12} sm={8}>\n                      <Row>\n                        <Col xs={3}><h6>Campaign Description:</h6></Col>\n                        <Col xs={9}><h6 style={{fontWeight: 300, whiteSpace: \"pre-wrap\"}}>{campaign.description}</h6></Col>\n                      </Row>\n                      <Row>\n                        <Col xs={3}><h6>Campaign Goal:</h6></Col>\n                        <Col xs={9}><h6 style={{fontWeight: 300}}>{campaign.goal / 10 ** 18} cUSD</h6></Col>\n                      </Row>\n                      <Row>\n                        <Col xs={3}><h6>Campaign Closed Date:</h6></Col>\n                        <Col xs={9}><h6 style={{fontWeight: 300}}>{campaign.closedDateStr}</h6></Col>\n                      </Row>\n                      <Row>\n                        <Col xs={3}><h6>Campaign Status:</h6></Col>\n                        <Col xs={9}><h6 style={{fontWeight: 300}}>{campaign.closed === true ? \"Closed\" : \"Open\" }</h6></Col>\n                      </Row>\n                      <Row className=\"mt-3\">\n                        <Col xs={9} className=\"text-center\"><h5>So far, people have donated {campaignDonation / 10 ** 18} cUSD</h5></Col>\n                      </Row>\n                      {campaign.closed === false &&\n                        <Form onSubmit={handleSubmit}>\n                          <Row className=\"mt-3\">\n                            <Col xs={3}>\n                                <Form.Label><h6>Donation Amount</h6></Form.Label>\n                            </Col>\n                            <Col xs={2}>\n                                <Form.Control\n                                      type=\"number\"\n                                      min={1}\n                                      value={donationAmount}\n                                      onChange={handleDonationChange}\n                                    />\n                            </Col>\n                            <Col xs={1}><Form.Label><h6>cUSD</h6></Form.Label></Col>\n                            <Col xs={2}>\n                                <Button variant=\"primary\" type=\"submit\" disabled={donateDisabled}>\n                                  {donateDisabled &&\n                                    <Spinner\n                                      as=\"span\"\n                                      animation=\"grow\"\n                                      size=\"sm\"\n                                      role=\"status\"\n                                      aria-hidden=\"true\"\n                                    />\n                                  }\n                                  {donateDisabled ? \"Loading...\" : \"Donate\"}\n                                </Button>\n                            </Col>\n                          </Row>\n                        </Form>\n                      }\n                      \n                      {campaign.owner === account && (new Date() >= campaign.closedDate) && campaign.closed !== true &&\n                          <Row className=\"mt-3\">\n                            <Col xs={9} className=\"text-center\">\n                                <Button variant=\"danger\" disabled={closeDisabled} onClick={handleClose}>\n                                  {closeDisabled &&\n                                    <Spinner\n                                      as=\"span\"\n                                      animation=\"grow\"\n                                      size=\"sm\"\n                                      role=\"status\"\n                                      aria-hidden=\"true\"\n                                    />\n                                  }\n                                  {closeDisabled ? \"Loading...\" : \"Close Campaign\"}\n                                </Button>\n                            </Col>\n                          </Row>\n                      }\n                      \n                      {campaign.owner === account && (new Date() >= campaign.closedDate) && campaign.closed === true && campaign.donationWithdrawn === false &&\n                        <Row className=\"mt-3\">\n                            <Col xs={9} className=\"text-center\">\n                                <Button variant=\"secondary\" disabled={withdrawDisabled} onClick={handleWithdraw}>\n                                  {withdrawDisabled &&\n                                    <Spinner\n                                      as=\"span\"\n                                      animation=\"grow\"\n                                      size=\"sm\"\n                                      role=\"status\"\n                                      aria-hidden=\"true\"\n                                    />\n                                  }\n                                  {withdrawDisabled ? \"Loading...\" : \"Withdraw Donation\"}\n                                </Button>\n                            </Col>\n                        </Row>\n                      }\n                      \n                      {campaign.donationWithdrawn === true &&\n                        <Row className=\"mt-3\">\n                            <Col xs={9} className=\"text-center\">\n                                <h5>Donation has been withdrawn by Campaign Owner</h5>\n                            </Col>\n                        </Row>\n                      }\n                    </Col>\n                  </Row>\n                </Container>\n            }\n        </React.Fragment>\n  );\n};\n\nexport default Campaign;\n","import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\n//import SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport DonationCampaigns from \"./contracts/donationcampaigns.abi.json\";\nimport ERC20 from \"./contracts/erc20.abi.json\";\nimport getWeb3 from \"./getWeb3\";\nimport { newKitFromWeb3 } from \"@celo/contractkit\"\nimport {\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Campaigns from './routes/Campaigns';\nimport CampaignList from './components/CampaignList';\nimport CreateCampaign from './components/CreateCampaign';\nimport Campaign from './components/Campaign';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Nav from 'react-bootstrap/Nav'\n\nclass App extends Component {\n  state = { flag: false, web3: null, accounts: null, contract: null, account: null, kit: null, cUSDContract: null };\n\n  updateFlag = () => {\n    console.log(\"update flag\");\n    this.setState({ flag: !this.state.flag });\n  }\n  \n  login = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      \n      const kit = newKitFromWeb3(web3);\n      const accounts = await kit.web3.eth.getAccounts();\n      kit.defaultAccount = accounts[0];\n      kit.connection.defaultAccount = accounts[0];\n\n      const instance = new kit.web3.eth.Contract(DonationCampaigns, process.env.REACT_APP_DONATION_CAMPAIGNS_ADDRESS);\n      const cUSDContract = new kit.web3.eth.Contract(ERC20, process.env.REACT_APP_CUSD_CONTRACT_ADDRESS);\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance, account: kit.defaultAccount, kit, cUSDContract });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  }\n  \n  logout = async () => {\n    if (window.celo.isConnected()) {\n      try {\n        const { kit } = this.state;\n        kit.connection.stop();\n        kit.defaultAccount = null;\n        kit.connection.defaultAccount = null;\n        \n        this.setState({ web3: null, accounts: null, contract: null, account: null });\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return (\n        <React.Fragment>\n          <div className=\"row\">\n            <div className=\"col-md-10 text-center mt-1\">\n              Please login with your Celo Wallet to use this app\n            </div>\n            <div className=\"col-md-2 text-end mt-1\">\n              <Button variant=\"primary\" size=\"sm\" className=\"me-2\" onClick={this.login}>\n                  Login with Celo Wallet\n              </Button>\n            </div>\n          </div>\n        \n        </React.Fragment>\n      )\n    }\n    const allCampaigns = (\n      <CampaignList bookmarked=\"false\" contract={this.state.contract} flag={this.state.flag} />\n    );\n    const createCampaign = (\n      <CreateCampaign contract={this.state.contract} account={this.state.account} updateFlag={this.updateFlag} />\n    );\n    return (\n      <React.Fragment>\n        <Nav variant=\"tabs\">\n          <Nav.Item>\n            <LinkContainer to=\"/celo-charity-campaign\">\n              <Nav.Link>All Campaigns</Nav.Link>\n            </LinkContainer>\n          </Nav.Item>\n          <Nav.Item className=\"ms-auto mt-auto mb-auto me-2 small\">\n            <strong>Your Account: </strong> { this.state.account } \n            <Button variant=\"secondary\" size=\"sm\" className=\"ms-3 me-2\" onClick={this.logout}>\n              Logout\n            </Button>\n          </Nav.Item>\n        </Nav>\n        \n        <Routes>\n          <Route path=\"/celo-charity-campaign\" element={<Campaigns campaignList={allCampaigns} createCampaign={createCampaign} />} />\n          <Route path=\"/celo-charity-campaign/campaign/:id\" element={<Campaign contract={this.state.contract} account={this.state.account} cUSDContract={this.state.cUSDContract} />} />\n        </Routes>\n      </React.Fragment>\n      \n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useRef } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Web3 from \"web3\";\n\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\n\nconst projectId = process.env.REACT_APP_INFURA_PROJECT_ID;\nconst projectSecret = process.env.REACT_APP_INFURA_PROJECT_SECRET;\n\nconst auth =\n    'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\n\nconst ipfs = ipfsHttpClient({\n    host: 'ipfs.infura.io',\n    port: 5001,\n    protocol: 'https',\n    headers: {\n        authorization: auth,\n    },\n});\n\n//const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n\nexport default function CreateCampaign(props) {\n    const { contract, account, updateFlag } = props;\n    const [show, setShow] = useState(false);\n    const [validated, setValidated] = useState(false);\n    const [btnDisabled, setBtnDisabled] = useState(false);\n    const nameRef = useRef(null);\n    const descRef = useRef(null);\n    const goalRef = useRef(null);\n    const closeDateRef = useRef(null);\n    const fileRef = useRef(null);\n\n    const handleSubmit = async (event) => {\n      const form = event.currentTarget;\n      if (form.checkValidity() === false) {\n        event.preventDefault();\n        event.stopPropagation();\n        setValidated(true);\n      } else {\n        event.preventDefault();\n        setBtnDisabled(true);\n        const added = await ipfs.add(fileRef.current.files[0]);\n        const goalWei = Web3.utils.toWei(goalRef.current.value, 'ether');\n        const result = await contract.methods.createCampaign(nameRef.current.value,\n                                                             added.path,\n                                                             descRef.current.value,\n                                                             goalWei,\n                                                             Math.floor(new Date(closeDateRef.current.value).getTime() / 1000)\n                                                            )\n                        .send({ from: account });\n        console.log(result);\n        setShow(false);\n        setBtnDisabled(false);\n        setValidated(false);\n        updateFlag();\n      }\n    };\n\n    const handleClose = () => {\n      setShow(false);\n      setValidated(false);\n    }\n    const handleShow = () => setShow(true);\n    \n    return (\n        <React.Fragment>\n          <div className=\"container\">\n            <div className=\"col-md-12 text-center mt-3\">\n              <Button variant=\"primary\" onClick={handleShow}>\n                  Add Donation Campaign\n              </Button>\n            </div>\n          </div>\n          \n          <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>Add Campaign</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                  <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                      <Form.Label>Campaign Name</Form.Label>\n                      <Form.Control type=\"text\" placeholder=\"Enter Campaign Name\" required ref={nameRef} />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please provide a campaign name.\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                  \n                    <Form.Group className=\"mb-3\" controlId=\"formBasicDescription\">\n                      <Form.Label>Campaign Description</Form.Label>\n                      <Form.Control as=\"textarea\" rows={5} placeholder=\"Enter Campaign Description\" required ref={descRef} />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please provide a campaign description.\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    \n                    <Form.Group className=\"mb-3\" controlId=\"formBasicGoal\">\n                      <Form.Label>Campaign Goal (in cUSD)</Form.Label>\n                      <Form.Control type=\"number\" className=\"w-50\" required step=\"0.1\" ref={goalRef} />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please provide a campaign goal.\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    \n                    <Form.Group className=\"mb-3\" controlId=\"formBasicClosingDate\">\n                      <Form.Label>Campaign Closing Date</Form.Label>\n                      <Form.Control type=\"date\" className=\"w-50\" required min={new Date().toISOString().split('T')[0]} ref={closeDateRef} />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please provide a closing date.\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    \n                    <Form.Group className=\"mb-3\" controlId=\"formBasicImage\">\n                      <Form.Label>Campaign Image</Form.Label>\n                      <Form.Control\n                        type=\"file\"\n                        required\n                        accept=\".jpg,.jpeg,.png\" ref={fileRef}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        Please provide image file.\n                      </Form.Control.Feedback>\n                    </Form.Group>\n                    \n                    <Button variant=\"primary\" type=\"submit\" disabled={btnDisabled}>\n                      {btnDisabled &&\n                        <Spinner\n                          as=\"span\"\n                          animation=\"grow\"\n                          size=\"sm\"\n                          role=\"status\"\n                          aria-hidden=\"true\"\n                        />\n                      }\n                      {btnDisabled ? \"Loading...\" : \"Submit\"}\n                    </Button>\n                  </Form>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose} disabled={btnDisabled}>\n                  Close\n                </Button>\n              </Modal.Footer>\n          </Modal>\n        </React.Fragment>\n    )\n}"],"sourceRoot":""}